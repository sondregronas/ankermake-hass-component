name: Release

on:
  release:

permissions:
  contents: write


jobs:
  hacs:
    name: HACS Action
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version to release tag
        run: |
          sed -i "s/GITHUB_RELEASE_VERSION/${{ github.event.release.tag_name }}/g" custom_components/ankermake/manifest.json
          sed -i "s/GITHUB_RELEASE_VERSION/${{ github.event.release.tag_name }}/g" custom_components/ankermake/const.py

      - name: Zip custom_components/ankermake
        run: zip -r ankermake.zip custom_components/ankermake

      - name: Upload release asset to the existing release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const tag = context.ref.replace("refs/tags/", "");
            // Get release for this tag
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            });
            // Upload the release asset
            await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: "ankermake.zip",
              data: await fs.readFileSync("ankermake.zip")
            });